/**
 * generated by Xtext 2.22.0
 */
package org.architecture.cnl.archcnl.impl;

import org.architecture.cnl.archcnl.ArchcnlPackage;
import org.architecture.cnl.archcnl.ConceptExpression;
import org.architecture.cnl.archcnl.DataStatement;
import org.architecture.cnl.archcnl.ObjectConceptExpression;
import org.architecture.cnl.archcnl.Relation;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Object Concept Expression</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.architecture.cnl.archcnl.impl.ObjectConceptExpressionImpl#getRelation <em>Relation</em>}</li>
 *   <li>{@link org.architecture.cnl.archcnl.impl.ObjectConceptExpressionImpl#getCardinality <em>Cardinality</em>}</li>
 *   <li>{@link org.architecture.cnl.archcnl.impl.ObjectConceptExpressionImpl#getNumber <em>Number</em>}</li>
 *   <li>{@link org.architecture.cnl.archcnl.impl.ObjectConceptExpressionImpl#getConcept <em>Concept</em>}</li>
 *   <li>{@link org.architecture.cnl.archcnl.impl.ObjectConceptExpressionImpl#getData <em>Data</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObjectConceptExpressionImpl extends MinimalEObjectImpl.Container implements ObjectConceptExpression
{
  /**
   * The cached value of the '{@link #getRelation() <em>Relation</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getRelation()
   * @generated
   * @ordered
   */
  protected Relation relation;

  /**
   * The default value of the '{@link #getCardinality() <em>Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardinality()
   * @generated
   * @ordered
   */
  protected static final String CARDINALITY_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getCardinality() <em>Cardinality</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCardinality()
   * @generated
   * @ordered
   */
  protected String cardinality = CARDINALITY_EDEFAULT;

  /**
   * The default value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected static final int NUMBER_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getNumber() <em>Number</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getNumber()
   * @generated
   * @ordered
   */
  protected int number = NUMBER_EDEFAULT;

  /**
   * The cached value of the '{@link #getConcept() <em>Concept</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConcept()
   * @generated
   * @ordered
   */
  protected ConceptExpression concept;

  /**
   * The cached value of the '{@link #getData() <em>Data</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getData()
   * @generated
   * @ordered
   */
  protected DataStatement data;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObjectConceptExpressionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return ArchcnlPackage.Literals.OBJECT_CONCEPT_EXPRESSION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Relation getRelation()
  {
    return relation;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetRelation(Relation newRelation, NotificationChain msgs)
  {
    Relation oldRelation = relation;
    relation = newRelation;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION, oldRelation, newRelation);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setRelation(Relation newRelation)
  {
    if (newRelation != relation)
    {
      NotificationChain msgs = null;
      if (relation != null)
        msgs = ((InternalEObject)relation).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION, null, msgs);
      if (newRelation != null)
        msgs = ((InternalEObject)newRelation).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION, null, msgs);
      msgs = basicSetRelation(newRelation, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION, newRelation, newRelation));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getCardinality()
  {
    return cardinality;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setCardinality(String newCardinality)
  {
    String oldCardinality = cardinality;
    cardinality = newCardinality;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CARDINALITY, oldCardinality, cardinality));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getNumber()
  {
    return number;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setNumber(int newNumber)
  {
    int oldNumber = number;
    number = newNumber;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__NUMBER, oldNumber, number));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public ConceptExpression getConcept()
  {
    return concept;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConcept(ConceptExpression newConcept, NotificationChain msgs)
  {
    ConceptExpression oldConcept = concept;
    concept = newConcept;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT, oldConcept, newConcept);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConcept(ConceptExpression newConcept)
  {
    if (newConcept != concept)
    {
      NotificationChain msgs = null;
      if (concept != null)
        msgs = ((InternalEObject)concept).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT, null, msgs);
      if (newConcept != null)
        msgs = ((InternalEObject)newConcept).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT, null, msgs);
      msgs = basicSetConcept(newConcept, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT, newConcept, newConcept));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public DataStatement getData()
  {
    return data;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetData(DataStatement newData, NotificationChain msgs)
  {
    DataStatement oldData = data;
    data = newData;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA, oldData, newData);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setData(DataStatement newData)
  {
    if (newData != data)
    {
      NotificationChain msgs = null;
      if (data != null)
        msgs = ((InternalEObject)data).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA, null, msgs);
      if (newData != null)
        msgs = ((InternalEObject)newData).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA, null, msgs);
      msgs = basicSetData(newData, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA, newData, newData));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION:
        return basicSetRelation(null, msgs);
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT:
        return basicSetConcept(null, msgs);
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA:
        return basicSetData(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION:
        return getRelation();
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CARDINALITY:
        return getCardinality();
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__NUMBER:
        return getNumber();
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT:
        return getConcept();
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA:
        return getData();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION:
        setRelation((Relation)newValue);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CARDINALITY:
        setCardinality((String)newValue);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__NUMBER:
        setNumber((Integer)newValue);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT:
        setConcept((ConceptExpression)newValue);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA:
        setData((DataStatement)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION:
        setRelation((Relation)null);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CARDINALITY:
        setCardinality(CARDINALITY_EDEFAULT);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__NUMBER:
        setNumber(NUMBER_EDEFAULT);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT:
        setConcept((ConceptExpression)null);
        return;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA:
        setData((DataStatement)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__RELATION:
        return relation != null;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CARDINALITY:
        return CARDINALITY_EDEFAULT == null ? cardinality != null : !CARDINALITY_EDEFAULT.equals(cardinality);
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__NUMBER:
        return number != NUMBER_EDEFAULT;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__CONCEPT:
        return concept != null;
      case ArchcnlPackage.OBJECT_CONCEPT_EXPRESSION__DATA:
        return data != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (cardinality: ");
    result.append(cardinality);
    result.append(", number: ");
    result.append(number);
    result.append(')');
    return result.toString();
  }

} //ObjectConceptExpressionImpl
