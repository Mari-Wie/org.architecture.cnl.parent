/**
 * generated by Xtext 2.22.0
 */
package org.architecture.cnl.archcnl;

import org.eclipse.emf.ecore.EFactory;

/**
 * <!-- begin-user-doc -->
 * The <b>Factory</b> for the model.
 * It provides a create method for each non-abstract class of the model.
 * <!-- end-user-doc -->
 * @see org.architecture.cnl.archcnl.ArchcnlPackage
 * @generated
 */
public interface ArchcnlFactory extends EFactory
{
  /**
   * The singleton instance of the factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  ArchcnlFactory eINSTANCE = org.architecture.cnl.archcnl.impl.ArchcnlFactoryImpl.init();

  /**
   * Returns a new object of class '<em>Model</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Model</em>'.
   * @generated
   */
  Model createModel();

  /**
   * Returns a new object of class '<em>Sentence</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sentence</em>'.
   * @generated
   */
  Sentence createSentence();

  /**
   * Returns a new object of class '<em>Negation Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Negation Rule Type</em>'.
   * @generated
   */
  NegationRuleType createNegationRuleType();

  /**
   * Returns a new object of class '<em>Anything</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Anything</em>'.
   * @generated
   */
  Anything createAnything();

  /**
   * Returns a new object of class '<em>Nothing</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Nothing</em>'.
   * @generated
   */
  Nothing createNothing();

  /**
   * Returns a new object of class '<em>Conditional Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Conditional Rule Type</em>'.
   * @generated
   */
  ConditionalRuleType createConditionalRuleType();

  /**
   * Returns a new object of class '<em>Only Can Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Only Can Rule Type</em>'.
   * @generated
   */
  OnlyCanRuleType createOnlyCanRuleType();

  /**
   * Returns a new object of class '<em>Sub Concept Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Sub Concept Rule Type</em>'.
   * @generated
   */
  SubConceptRuleType createSubConceptRuleType();

  /**
   * Returns a new object of class '<em>Must Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Must Rule Type</em>'.
   * @generated
   */
  MustRuleType createMustRuleType();

  /**
   * Returns a new object of class '<em>Object</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Object</em>'.
   * @generated
   */
  Object createObject();

  /**
   * Returns a new object of class '<em>Can Only Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Can Only Rule Type</em>'.
   * @generated
   */
  CanOnlyRuleType createCanOnlyRuleType();

  /**
   * Returns a new object of class '<em>Cardinality Rule Type</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Cardinality Rule Type</em>'.
   * @generated
   */
  CardinalityRuleType createCardinalityRuleType();

  /**
   * Returns a new object of class '<em>Object Concept Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Object Concept Expression</em>'.
   * @generated
   */
  ObjectConceptExpression createObjectConceptExpression();

  /**
   * Returns a new object of class '<em>And Object Concept Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>And Object Concept Expression</em>'.
   * @generated
   */
  AndObjectConceptExpression createAndObjectConceptExpression();

  /**
   * Returns a new object of class '<em>Or Object Concept Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Or Object Concept Expression</em>'.
   * @generated
   */
  OrObjectConceptExpression createOrObjectConceptExpression();

  /**
   * Returns a new object of class '<em>Relation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Relation</em>'.
   * @generated
   */
  Relation createRelation();

  /**
   * Returns a new object of class '<em>Datatype Relation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Datatype Relation</em>'.
   * @generated
   */
  DatatypeRelation createDatatypeRelation();

  /**
   * Returns a new object of class '<em>Object Relation</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Object Relation</em>'.
   * @generated
   */
  ObjectRelation createObjectRelation();

  /**
   * Returns a new object of class '<em>Concept Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Concept Expression</em>'.
   * @generated
   */
  ConceptExpression createConceptExpression();

  /**
   * Returns a new object of class '<em>That Expression</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>That Expression</em>'.
   * @generated
   */
  ThatExpression createThatExpression();

  /**
   * Returns a new object of class '<em>Statement List</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Statement List</em>'.
   * @generated
   */
  StatementList createStatementList();

  /**
   * Returns a new object of class '<em>Variable Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable Statement</em>'.
   * @generated
   */
  VariableStatement createVariableStatement();

  /**
   * Returns a new object of class '<em>Data Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Data Statement</em>'.
   * @generated
   */
  DataStatement createDataStatement();

  /**
   * Returns a new object of class '<em>Fact Statement</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Fact Statement</em>'.
   * @generated
   */
  FactStatement createFactStatement();

  /**
   * Returns a new object of class '<em>Concept Assertion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Concept Assertion</em>'.
   * @generated
   */
  ConceptAssertion createConceptAssertion();

  /**
   * Returns a new object of class '<em>Role Assertion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Role Assertion</em>'.
   * @generated
   */
  RoleAssertion createRoleAssertion();

  /**
   * Returns a new object of class '<em>Datatype Property Assertion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Datatype Property Assertion</em>'.
   * @generated
   */
  DatatypePropertyAssertion createDatatypePropertyAssertion();

  /**
   * Returns a new object of class '<em>Object Property Assertion</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Object Property Assertion</em>'.
   * @generated
   */
  ObjectPropertyAssertion createObjectPropertyAssertion();

  /**
   * Returns a new object of class '<em>Concept</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Concept</em>'.
   * @generated
   */
  Concept createConcept();

  /**
   * Returns a new object of class '<em>Variable</em>'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return a new object of class '<em>Variable</em>'.
   * @generated
   */
  Variable createVariable();

  /**
   * Returns the package supported by this factory.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the package supported by this factory.
   * @generated
   */
  ArchcnlPackage getArchcnlPackage();

} //ArchcnlFactory
